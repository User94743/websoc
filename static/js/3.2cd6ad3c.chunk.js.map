{"version":3,"sources":["hoc/authRedirect.js","components/Content/ProfileInfo/profile.module.css","components/Content/Mypost/mypost.module.css","components/Content/Mypost/post/post.module.css","components/Content/ProfileInfo/3573970.jpg","components/Content/ProfileInfo/profileStatusHook.jsx","components/Content/ProfileInfo/ProfileData.jsx","components/Content/ProfileInfo/ProfileDataForm.jsx","components/Content/ProfileInfo/profileInfo.jsx","components/Content/Mypost/post/post.jsx","components/Content/Mypost/mypost.jsx","components/Content/Mypost/mypostContainer.jsx","components/Content/content.jsx","components/Content/contentContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authPage","AuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","pf","value","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","Contact","title","contactValue","ProfileData","profile","isOwner","toEditMode","onClick","userId","lookingForAJob","lookingForAJobDescription","aboutMe","fullName","Object","keys","contacts","map","key","ProfileDataFormRedux","reduxForm","form","handleSubmit","error","onSubmit","styles","formError","createField","Input","type","Textarea","ProfileInfo","savePhoto","saveProfile","ava","src","photos","large","UserPhoto","target","files","length","initialValues","formData","then","post","pcss","item_post","message","likesCount","maxLengthCreator10","maxLengthCreator","minLengthCreator2","minLengthCreator","Element","MypostRedux","posts","Field","placeholder","name","component","validate","required","Mypost","memo","post_data2","reverse","postf","msg","id","addPost","MypostContainer","ProfilePage","postsAll","newPostText","newText","dispatch","actionCreatorAddPost","content","updateUserStatus","ContentContainer","match","params","history","push","getContent","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.2cd6ad3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"} />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"profile_ava__3mrMw\",\"status\":\"profile_status__14EDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"mypost_posts__2-oFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_post\":\"post_item_post__3DFH0\"};","export default __webpack_public_path__ + \"static/media/3573970.d9ead1cf.jpg\";","import React, {useEffect, useState} from \"react\";\r\nimport pf from './profile.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] =  useState(false);\r\n    let [status, setStatus] =  useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span  onDoubleClick = {activateEditMode} className={pf.status}>{status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                {<input value={status} onChange={onStatusChange} autoFocus={true} onBlur = {deactivateEditMode} autoFocus={true} />}\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileStatusHooks;\r\n","import React from \"react\";\r\n\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <button onClick={toEditMode}>Edit</button>}\r\n            <p>My ID: {profile.userId}</p>\r\n            <p>Looking a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</p>\r\n            <p>Job description: {profile.lookingForAJobDescription}</p>\r\n            <p>About me: {profile.aboutMe}</p>\r\n            <p>Full name: {profile.fullName}</p>\r\n            <p>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} title={key} contactValue={profile.contacts[key]} />\r\n            })}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({title, contactValue}) => {\r\n    return <div>{title}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileData;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControl/FormlsControl\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../../common/FormsControl/FormsControl.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <button>Save</button>\r\n            {error && <div className={styles.formError}>{error}</div>}\r\n            <p>My ID: {profile.userId}</p>\r\n            <p>Looking a job: {createField(\"\", [], Input, \"lookingForAJob\", {type: \"checkbox\"})}</p>\r\n            <p>Job description: {createField(\"Job description\", [], Textarea, \"lookingForAJobDescription\")}</p>\r\n            <p>About me: {createField(\"About me\", [], Textarea, \"aboutMe\")}</p>\r\n            <p>Full name: {createField(\"Full Name\", [], Input, \"fullName\")}</p>\r\n            <p>Contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>{key}: {createField(key, [], Input, \"contacts.\"+key)}</div>\r\n            })}</p>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Contact = ({title, contactValue}) => {\r\n    return <div>{title}: {contactValue}</div>\r\n}\r\n\r\nexport const ProfileDataFormRedux = reduxForm({form: 'edit-profile'}) (ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux;","import React, {useState} from \"react\";\r\nimport pf from './profile.module.css';\r\nimport Preloader from \"../../common/preloader\";\r\nimport UserPhoto from \"./3573970.jpg\";\r\nimport ProfileStatusHooks from \"./profileStatusHook\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataFormRedux from \"./ProfileDataForm\";\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n  let [editMode, setEditMode] =  useState(false);\r\n\r\n  if (!profile) {\r\n   return <Preloader />\r\n  }\r\n  const mainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n  const onSubmit =  (formData) => {\r\n      saveProfile(formData).then(() => {\r\n          setEditMode(false);\r\n      })\r\n  }\r\n  return (\r\n    <div>\r\n    <img className={pf.ava} src={profile.photos.large || UserPhoto} />\r\n      {isOwner && <input type={\"file\"} onChange={mainPhotoSelected} />}\r\n      {!editMode ?  <ProfileData profile={profile} isOwner={isOwner}\r\n      toEditMode={() => {setEditMode(true)}} /> : <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit} />}\r\n        <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport pcss from './post.module.css';\r\n\r\nconst post = (props) => {\r\n  return (\r\n    <div>\r\n          <div className={pcss.item_post}>\r\n            <img src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"/>\r\n            <br />\r\n            <p>{props.message}</p>\r\n            <span>Like - {props.likesCount}</span> \r\n            <hr />\r\n          </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default post;\r\n","import React from 'react';\r\nimport pcss from './mypost.module.css';\r\nimport Post from './post/post.jsx';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Element} from \"../../common/FormsControl/FormlsControl\";\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\nconst minLengthCreator2 = minLengthCreator(2);\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst MypostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={pcss.posts}>My posts\r\n            <br />\r\n            <Field placeholder={'Enter your message'} name={'post'} component={Textarea} validate={[required, maxLengthCreator10, minLengthCreator2]}></Field>\r\n            <br />\r\n            <button>Add</button>\r\n            <br />\r\n            <br />\r\n        </form>\r\n    );\r\n}\r\n\r\nconst MypostRedux = reduxForm({\r\n    form: 'post'\r\n})(MypostForm)\r\n\r\nconst Mypost = React.memo(props => {\r\n\r\n    let post_data2 = [...props.posts]\r\n        .reverse()\r\n        .map(\r\n        (postf) => <Post key={postf.id} message={postf.msg} likesCount={postf.likesCount}/>\r\n    );\r\n\r\n    let addPostSubmit = (value) => {\r\n        props.addPost(value.post);\r\n    }\r\n    return (\r\n        <div>\r\n            <MypostRedux onSubmit={addPostSubmit}/>\r\n            {post_data2}\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nexport default Mypost;\r\n","import React from 'react';\r\nimport pcss from './mypost.module.css';\r\nimport Post from './post/post.jsx'\r\nimport {actionCreatorAddPost} from './../../../redux/profileReducer.js';\r\nimport Mypost from \"./mypost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.ProfilePage.postsAll,\r\n        newPostText: state.ProfilePage.newText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (post) => {\r\n            dispatch(actionCreatorAddPost(post))\r\n        }\r\n    }\r\n};\r\nconst MypostContainer = connect(mapStateToProps, mapDispatchToProps) (Mypost);\r\n\r\nexport default MypostContainer;\r\n","import React from 'react';\r\nimport Content from './content.module.css';\r\nimport ProfileInfo from './ProfileInfo/profileInfo.jsx';\r\nimport MypostContainer from \"./Mypost/mypostContainer.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst content = (props) => {\r\n\r\n  return(\r\n    <div>\r\n    <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateUserStatus}/>\r\n    <MypostContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default content;\r\n","import React from \"react\";\r\nimport Content from \"./content.jsx\";\r\nimport * as axios from \"axios\";\r\nimport {getContent, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {AuthRedirect} from \"../../hoc/authRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ContentContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.id;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getContent(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.id != prevProps.match.params.id) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Content saveProfile={this.props.saveProfile} savePhoto={this.props.savePhoto} isOwner={!this.props.match.params.id} {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateUserStatus} />\r\n        )}\r\n\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status,\r\n        userId: state.authPage.userId,\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getContent,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter\r\n  //  AuthRedirect\r\n)(ContentContainer)"],"sourceRoot":""}