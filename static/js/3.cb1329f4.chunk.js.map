{"version":3,"sources":["hoc/authRedirect.js","components/Content/ProfileInfo/profile.module.css","components/Content/Mypost/mypost.module.css","components/Content/Mypost/post/post.module.css","components/Content/ProfileInfo/profileStatus.jsx","components/Content/ProfileInfo/profileStatusHook.jsx","components/Content/ProfileInfo/profileInfo.jsx","components/Content/Mypost/post/post.jsx","components/Content/Mypost/mypost.jsx","components/Content/Mypost/mypostContainer.jsx","components/Content/content.jsx","components/Content/contentContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authPage","AuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","pf","value","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","ava","src","photos","large","aboutMe","lookingForAJob","width","lookingForAJobDescription","contacts","instagram","post","pcss","item_post","message","likesCount","maxLengthCreator10","maxLengthCreator","minLengthCreator2","minLengthCreator","Textarea","Element","MypostRedux","reduxForm","form","onSubmit","handleSubmit","posts","Field","placeholder","name","component","validate","required","Mypost","memo","post_data2","reverse","map","postf","msg","addPost","MypostContainer","ProfilePage","postsAll","newPostText","newText","dispatch","actionCreatorAddPost","content","updateUserStatus","ContentContainer","userId","match","params","id","history","push","getContent","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.cb1329f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"} />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"profile_ava__3mrMw\",\"status\":\"profile_status__14EDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"mypost_posts__2-oFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_post\":\"post_item_post__3DFH0\"};","import React from \"react\";\r\nimport pf from './profile.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n\r\n    }\r\n    onStatusChange = (e) => {\r\n\r\n        this.setState({\r\n         status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                <span className={pf.status} onDoubleClick = {this.activateEditMode}>{this.props.status}</span>\r\n                    </div>\r\n                    }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    {<input onChange={this.onStatusChange} autoFocus={true} onBlur = {this.deactivateEditMode} value={this.state.status} />}\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default  ProfileStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport pf from './profile.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] =  useState(false);\r\n    let [status, setStatus] =  useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span  onDoubleClick = {activateEditMode} className={pf.status}>{status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                {<input value={status} onChange={onStatusChange} autoFocus={true} onBlur = {deactivateEditMode} autoFocus={true} />}\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileStatusHooks;\r\n","import React from \"react\";\r\nimport pf from './profile.module.css';\r\nimport Preloader from \"../../common/preloader\";\r\nimport ProfileStatus from './profileStatus';\r\nimport ProfileStatusHooks from \"./profileStatusHook\";\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n  if (!profile) {\r\n   return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <img className={pf.ava} src={profile.photos.large} />\r\n      <p>{profile.aboutMe}</p>\r\n      <p>{profile.lookingForAJob ? <img width=\"50px\" src='https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Check_green_icon.svg/2048px-Check_green_icon.svg.png' /> :\r\n        <img width=\"50px\" src=\"https://cdn1.iconfinder.com/data/icons/basic-ui-elements-coloricon/21/19-512.png\" />}</p>\r\n      <p>{profile.lookingForAJobDescription}</p>\r\n      <p>{profile.contacts.instagram}</p>\r\n        <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport pcss from './post.module.css';\r\n\r\nconst post = (props) => {\r\n  return (\r\n    <div>\r\n          <div className={pcss.item_post}>\r\n            <img src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"/>\r\n            <br />\r\n            <p>{props.message}</p>\r\n            <span>Like - {props.likesCount}</span> \r\n            <hr />\r\n          </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default post;\r\n","import React from 'react';\r\nimport pcss from './mypost.module.css';\r\nimport Post from './post/post.jsx';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Element} from \"../../common/FormsControl/FormlsControl\";\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\nconst minLengthCreator2 = minLengthCreator(2);\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst MypostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={pcss.posts}>My posts\r\n            <br />\r\n            <Field placeholder={'Enter your message'} name={'post'} component={Textarea} validate={[required, maxLengthCreator10, minLengthCreator2]}></Field>\r\n            <br />\r\n            <button>Add</button>\r\n            <br />\r\n            <br />\r\n        </form>\r\n    );\r\n}\r\n\r\nconst MypostRedux = reduxForm({\r\n    form: 'post'\r\n})(MypostForm)\r\n\r\nconst Mypost = React.memo(props => {\r\n\r\n    let post_data2 = [...props.posts]\r\n        .reverse()\r\n        .map(\r\n        (postf) => <Post message={postf.msg} likesCount={postf.likesCount}/>\r\n    );\r\n\r\n    let addPostSubmit = (value) => {\r\n        props.addPost(value.post);\r\n    }\r\n    return (\r\n        <div>\r\n            <MypostRedux onSubmit={addPostSubmit}/>\r\n            {post_data2}\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nexport default Mypost;\r\n","import React from 'react';\r\nimport pcss from './mypost.module.css';\r\nimport Post from './post/post.jsx'\r\nimport {actionCreatorAddPost} from './../../../redux/profileReducer.js';\r\nimport Mypost from \"./mypost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.ProfilePage.postsAll,\r\n        newPostText: state.ProfilePage.newText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (post) => {\r\n            dispatch(actionCreatorAddPost(post))\r\n        }\r\n    }\r\n};\r\nconst MypostContainer = connect(mapStateToProps, mapDispatchToProps) (Mypost);\r\n\r\nexport default MypostContainer;\r\n","import React from 'react';\r\nimport Content from './content.module.css';\r\nimport ProfileInfo from './ProfileInfo/profileInfo.jsx';\r\nimport MypostContainer from \"./Mypost/mypostContainer.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst content = (props) => {\r\n\r\n  return(\r\n    <div>\r\n    <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateUserStatus}/>\r\n    <MypostContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default content;\r\n","import React from \"react\";\r\nimport Content from \"./content.jsx\";\r\nimport * as axios from \"axios\";\r\nimport {getContent, getUserStatus, updateUserStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {AuthRedirect} from \"../../hoc/authRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ContentContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.id;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getContent(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Content {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateUserStatus} />\r\n        )}\r\n\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status,\r\n        userId: state.authPage.userId,\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getContent,\r\n        getUserStatus,\r\n        updateUserStatus\r\n    }),\r\n    withRouter\r\n  //  AuthRedirect\r\n)(ContentContainer)"],"sourceRoot":""}